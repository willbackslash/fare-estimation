from domain.models import RideRecord
from fares import (
    get_final_fare,
    get_segment_idle_hours_fare,
    get_segment_total_moving_fare,
    perform_fares_calculation,
    get_moving_fare_to_apply,
)


def test_given_a_timestamp_it_gets_a_correct_moving_fare():
    early_timestamp = 1653350651  # Tuesday, May 24, 2022 12:04:11 AM
    regular_timestamp = 1653390251  # Tuesday, May 24, 2022 11:04:11 AM
    early_fare = get_moving_fare_to_apply(early_timestamp)
    regular_fare = get_moving_fare_to_apply(regular_timestamp)
    assert early_fare == 1.30
    assert regular_fare == 0.74


def test_it_gets_a_correct_total_moving_fare_with_early_timestamp():
    early_timestamp = 1653350651  # Tuesday, May 24, 2022 12:04:11 AM
    segment_moving_fare = get_segment_total_moving_fare(0.5, early_timestamp)
    assert segment_moving_fare == 0.65


def test_it_gets_a_correct_total_moving_fare_with_regular_timestamp():
    regular_timestamp = 1653390251  # Tuesday, May 24, 2022 11:04:11 AM
    segment_moving_fare = get_segment_total_moving_fare(0.1, regular_timestamp)
    assert segment_moving_fare == 0.074


def test_it_gets_a_correct_idle_fare_for_a_segment_of_half_hour():
    cleaned_records = [
        "1,37.96666,23.728308,1405594957",
        "1,37.966627,23.728263,1405596757",
    ]
    record1 = RideRecord(*cleaned_records[0].split(","))
    record2 = RideRecord(*cleaned_records[1].split(","))
    idle_fare = get_segment_idle_hours_fare(record1, record2)
    assert idle_fare == 5.95


def test_it_calculates_a_minimun_ride_fare_correctly():
    total_moving_fare = 0.5
    total_idle_hours = 0.1
    fare = get_final_fare(total_moving_fare, total_idle_hours)
    assert fare == 3.47


def test_it_calculates_a_fare_correctly():
    cleaned_records = [
        "1,37.96666,23.728308,1405594957",
        "1,37.966627,23.728263,1405594966",
        "1,37.966625,23.728263,1405594974",
        "1,37.966613,23.728375,1405594984",
        "1,37.966203,23.728597,1405594992",
        "1,37.966195,23.728613,1405595001",
        "1,37.966195,23.728613,1405595009",
        "1,37.966195,23.728613,1405595017",
        "1,37.966195,23.728613,1405595026",
        "1,37.966195,23.728613,1405595034",
        "1,37.966195,23.728613,1405595043",
        "1,37.96618,23.728662,1405595051",
        "1,37.965937,23.72844,1405595059",
        "1,37.965377,23.727717,1405595068",
        "1,37.965,23.727242,1405595076",
        "1,37.964968,23.727183,1405595085",
        "1,37.964982,23.72712,1405595093",
        "1,37.964823,23.726953,1405595102",
        "1,37.964168,23.726123,1405595110",
        "1,37.963533,23.72533,1405595119",
        "1,37.963158,23.724863,1405595127",
        "1,37.963158,23.724872,1405595135",
        "1,37.963158,23.724872,1405595144",
        "1,37.963063,23.724733,1405595152",
        "1,37.962587,23.724213,1405595161",
        "1,37.961983,23.723453,1405595169",
        "1,37.961273,23.722412,1405595178",
        "1,37.960345,23.72121,1405595186",
        "1,37.959587,23.720195,1405595195",
        "1,37.958717,23.719082,1405595203",
        "1,37.957983,23.718175,1405595212",
        "1,37.957065,23.717028,1405595220",
        "1,37.956215,23.715897,1405595229",
        "1,37.955217,23.714548,1405595237",
        "1,37.954302,23.71337,1405595284",
        "1,37.940872,23.687423,1405595387",
        "1,37.941705,23.685902,1405595396",
        "1,37.942593,23.683877,1405595404",
        "1,37.94314,23.681962,1405595413",
        "1,37.943777,23.679647,1405595421",
        "1,37.944117,23.677613,1405595429",
        "1,37.944158,23.675455,1405595438",
        "1,37.944175,23.673467,1405595447",
        "1,37.944328,23.671412,1405595455",
        "1,37.94434,23.669497,1405595464",
        "1,37.94428,23.667473,1405595472",
        "1,37.944327,23.665977,1405595481",
        "1,37.94431,23.664312,1405595489",
        "1,37.9443,23.663012,1405595497",
        "1,37.944833,23.661637,1405595506",
        "1,37.94557,23.66051,1405595514",
        "1,37.946323,23.659393,1405595525",
        "1,37.947278,23.65789,1405595541",
        "1,37.948622,23.653343,1405595558",
        "1,37.948788,23.65191,1405595582",
        "1,37.948168,23.647647,1405595599",
        "1,37.948168,23.647647,1405595607",
        "1,37.948168,23.647647,1405595615",
        "1,37.948147,23.64741,1405595624",
        "1,37.947693,23.647002,1405595632",
        "1,37.947428,23.64651,1405595640",
        "1,37.947465,23.64645,1405595649",
        "1,37.947465,23.64645,1405595657",
        "1,37.947468,23.646373,1405595666",
        "1,37.947157,23.645792,1405595674",
        "1,37.946953,23.64535,1405595683",
        "1,37.946652,23.64484,1405595691",
        "1,37.946467,23.644497,1405595699",
        "1,37.94619,23.643987,1405595708",
        "1,37.945893,23.643327,1405595716",
        "1,37.945623,23.642785,1405595725",
        "1,37.945268,23.642557,1405595734",
        "1,37.944902,23.643192,1405595742",
        "1,37.944432,23.643655,1405595751",
        "1,37.943733,23.643835,1405595760",
        "1,37.94325,23.643555,1405595769",
        "1,37.942932,23.64329,1405595777",
        "1,37.942892,23.643263,1405595786",
        "1,37.942892,23.643263,1405595794",
        "1,37.942892,23.643263,1405595802",
        "1,37.94283,23.64322,1405595811",
        "1,37.942437,23.642862,1405595819",
        "1,37.941752,23.642278,1405595829",
        "1,37.940782,23.641467,1405595837",
        "1,37.93999,23.64081,1405595846",
        "1,37.939108,23.639942,1405595870",
        "1,37.936988,23.638087,1405595887",
        "1,37.936882,23.63688,1405595895",
        "1,37.937005,23.636063,1405595904",
        "1,37.937412,23.635655,1405595912",
        "1,37.937795,23.635798,1405595921",
        "1,37.937895,23.635635,1405595930",
        "1,37.937915,23.63546,1405595939",
        "1,37.937888,23.63517,1405595947",
        "1,37.937902,23.635152,1405595956",
        "1,37.937902,23.635152,1405595964",
        "1,37.937902,23.635152,1405595973",
        "1,37.937785,23.635117,1405595981",
        "1,37.937488,23.635118,1405595990",
        "1,37.93704,23.635212,1405595998",
        "1,37.936712,23.636157,1405596007",
        "1,37.93671,23.637055,1405596015",
        "1,37.936802,23.637957,1405596024",
        "1,37.936943,23.638873,1405596032",
        "1,37.937033,23.639472,1405596041",
        "1,37.937228,23.639655,1405596049",
        "1,37.937238,23.639643,1405596058",
        "1,37.937238,23.639643,1405596066",
        "1,37.937292,23.639455,1405596074",
        "1,37.937165,23.63879,1405596083",
        "1,37.936852,23.63758,1405596091",
        "1,37.936797,23.636308,1405596100",
        "1,37.937462,23.634823,1405596109",
        "1,37.938193,23.63355,1405596117",
        "1,37.938488,23.63282,1405596126",
        "1,37.938512,23.632628,1405596134",
        "1,37.938533,23.631848,1405596144",
        "1,37.938598,23.630322,1405596152",
        "1,37.938627,23.629837,1405596161",
        "1,37.93849,23.629648,1405596169",
        "1,37.937857,23.62908,1405596177",
        "1,37.936942,23.628098,1405596186",
        "1,37.936508,23.627105,1405596195",
        "1,37.936063,23.626143,1405596203",
        "1,37.935597,23.625688,1405596212",
        "1,37.93549,23.625655,1405596220",
    ]
    fares = perform_fares_calculation(cleaned_records)
    assert fares == {"1": 11.34}


def test_it_calculates_multiple_fares_at_time():
    cleaned_records = [
        "1,37.96666,23.728308,1405594957",
        "1,37.966627,23.728263,1405594966",
        "1,37.966625,23.728263,1405594974",
        "1,37.966613,23.728375,1405594984",
        "1,37.966203,23.728597,1405594992",
        "1,37.966195,23.728613,1405595001",
        "1,37.966195,23.728613,1405595009",
        "1,37.945268,23.642557,1405595734",
        "1,37.944902,23.643192,1405595742",
        "1,37.944432,23.643655,1405595751",
        "2,37.943733,23.643835,1405595760",
        "2,37.94325,23.643555,1405595769",
        "2,37.938533,23.631848,1405596144",
        "2,37.938598,23.630322,1405596152",
        "2,37.938627,23.629837,1405596161",
        "3,37.93849,23.629648,1405596169",
        "3,37.937857,23.62908,1405596177",
        "3,37.936942,23.628098,1405596186",
        "3,37.936508,23.627105,1405596195",
        "3,37.936063,23.626143,1405596203",
        "3,37.935597,23.625688,1405596212",
        "3,37.93549,23.625655,1405596220",
    ]
    fares = perform_fares_calculation(cleaned_records)
    assert fares == {"1": 7.42, "2": 3.47, "3": 3.47}
